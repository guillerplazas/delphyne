# delphyne-command

command: run_strategy
args:
  strategy: synthetize_fun
  args:
    vars: [x, y, z]
    prop:
      - [a, b, c]
      - F(a, b, c) == F(c, b, a) and F(0, 1, 0) != F(1, 0, 0)
  params: {}
  budget:
    num_requests: 3
outcome:
  status: completed
  diagnostics: []
  result:
    success: true
    raw_trace:
      nodes:
        "1": subtree(0, candidate)
        "2": child(1, gen{@1})
        "3": child(0, candidate{%2})
      queries:
        - node: 1
          ref: gen
          answers:
            "1": x + z
    browsable_trace:
      nodes:
        "0":
          kind: Conjecture
          success_value: null
          summary_message: null
          leaf_node: false
          label: conjecture_expr
          properties:
            - - with_ids: candidate
                with_hints: null
              - kind: subtree
                strategy: conjecture_expr
                args:
                  vars:
                    short: "['x', 'y', 'z']"
                    long: "['x', 'y', 'z']"
                    json_provided: true
                    json: [x, y, z]
                  prop:
                    short: (['a', 'b', 'c'], 'F(a, b, c) == F(c, b, a) and F(0, 1, 0) != F(1, 0, 0)')
                    long: (['a', 'b', 'c'], 'F(a, b, c) == F(c, b, a) and F(0, 1, 0) != F(1, 0, 0)')
                    json_provided: true
                    json:
                      - [a, b, c]
                      - F(a, b, c) == F(c, b, a) and F(0, 1, 0) != F(1, 0, 0)
                node_id: 1
          actions:
            - ref:
                with_ids: candidate{%2}
                with_hints: null
              hints: null
              related_success_nodes: [2]
              related_answers: []
              value:
                short: "'x + z'"
                long: "'x + z'"
                json_provided: true
                json: x + z
              destination: 3
          origin: root
        "1":
          kind: Branch
          success_value: null
          summary_message: null
          leaf_node: false
          label: ConjectureExpr
          properties:
            - - with_ids: gen
                with_hints: null
              - kind: query
                name: ConjectureExpr
                args:
                  vars: [x, y, z]
                  prop:
                    - [a, b, c]
                    - F(a, b, c) == F(c, b, a) and F(0, 1, 0) != F(1, 0, 0)
                answers:
                  - id: 1
                    hint: null
                    value:
                      short: "'x + z'"
                      long: "'x + z'"
                      json_provided: true
                      json: x + z
          actions:
            - ref:
                with_ids: gen{@1}
                with_hints: null
              hints: null
              related_success_nodes: []
              related_answers: [1]
              value:
                short: "'x + z'"
                long: "'x + z'"
                json_provided: true
                json: x + z
              destination: 2
          origin: [sub, 0, 0]
        "2":
          kind: Success
          success_value:
            short: "'x + z'"
            long: "'x + z'"
            json_provided: true
            json: x + z
          summary_message: null
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 1, 0]
        "3":
          kind: Success
          success_value:
            short: (['x', 'y', 'z'], 'x + z')
            long: (['x', 'y', 'z'], 'x + z')
            json_provided: true
            json:
              - [x, y, z]
              - x + z
          summary_message: null
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 0, 0]
