# delphyne-command

command: run_strategy
args:
  strategy: pick_nice_boy_name
  args:
    names: [Adeline, Noah, Julia, Jonathan]
  params: {}
  budget:
    num_requests: 10
outcome:
  status: completed
  diagnostics: []
  result:
    success: true
    raw_trace:
      nodes:
        "1": subtree(0, gen)
        "2": subtree(1, next([]))
        "3": child(2, gen{@1})
        "4": child(1, next([]){%3})
        "5": child(0, gen{%4})
        "6": subtree(1, next([next([]){%3}]))
        "7": child(6, gen{@2})
        "8": child(1, next([next([]){%3}]){%7})
        "9": child(0, gen{%8})
      queries:
        - node: 2
          ref: gen
          answers:
            "1": Noah
        - node: 6
          ref: gen
          answers:
            "2": Jonathan
    prompts:
      "1":
        messages:
          - role: system
            content: You are provided with a list of names. Can you pick a __boy__ name that isn't picked already? Just answer with the name and nothing else.
          - role: user
            content: |-
              Available names: ['Adeline', 'Noah', 'Julia', 'Jonathan']
              Picked already: []
        options:
          model: null
          max_tokens: null
      "2":
        messages:
          - role: system
            content: You are provided with a list of names. Can you pick a __boy__ name that isn't picked already? Just answer with the name and nothing else.
          - role: user
            content: |-
              Available names: ['Adeline', 'Noah', 'Julia', 'Jonathan']
              Picked already: ['Noah']
        options:
          model: null
          max_tokens: null
    browsable_trace:
      nodes:
        "0":
          kind: Branch
          success_value: null
          summary_message: null
          leaf_node: false
          label: iterated
          properties:
            - - with_ids: gen
                with_hints: null
              - kind: subtree
                strategy: iterated
                args:
                  next:
                    short: functools.partial(WrappedParametricStrategy(strategy=<function pick_boy_name at 0x11870ae80>, search_policy=<function dfs at 0x1184d3ce0>), ['Adeline', 'Noah', 'Julia', 'Jonathan'])
                    long: functools.partial(WrappedParametricStrategy(strategy=<function pick_boy_name at 0x11870ae80>, search_policy=<function dfs at 0x1184d3ce0>), ['Adeline', 'Noah', 'Julia', 'Jonathan'])
                    json_provided: false
                    json: null
                node_id: 1
          actions:
            - ref:
                with_ids: gen{%4}
                with_hints: null
              hints: null
              related_success_nodes: [4]
              related_answers: []
              value:
                short: "'Noah'"
                long: "'Noah'"
                json_provided: true
                json: Noah
              destination: 5
            - ref:
                with_ids: gen{%8}
                with_hints: null
              hints: null
              related_success_nodes: [8]
              related_answers: []
              value:
                short: "'Jonathan'"
                long: "'Jonathan'"
                json_provided: true
                json: Jonathan
              destination: 9
          origin: root
        "1":
          kind: Iterated
          success_value: null
          summary_message: null
          leaf_node: false
          label: null
          properties:
            - - with_ids: next([])
                with_hints: null
              - kind: subtree
                strategy: pick_boy_name
                args:
                  names:
                    short: "['Adeline', 'Noah', 'Julia', 'Jonathan']"
                    long: "['Adeline', 'Noah', 'Julia', 'Jonathan']"
                    json_provided: true
                    json: [Adeline, Noah, Julia, Jonathan]
                  picked_already:
                    short: ()
                    long: ()
                    json_provided: true
                    json: []
                node_id: 2
            - - with_ids: next([next([]){%3}])
                with_hints: null
              - kind: subtree
                strategy: pick_boy_name
                args:
                  names:
                    short: "['Adeline', 'Noah', 'Julia', 'Jonathan']"
                    long: "['Adeline', 'Noah', 'Julia', 'Jonathan']"
                    json_provided: true
                    json: [Adeline, Noah, Julia, Jonathan]
                  picked_already:
                    short: ('Noah',)
                    long: ('Noah',)
                    json_provided: true
                    json: [Noah]
                node_id: 6
          actions:
            - ref:
                with_ids: next([]){%3}
                with_hints: null
              hints: null
              related_success_nodes: [3]
              related_answers: []
              value:
                short: "'Noah'"
                long: "'Noah'"
                json_provided: true
                json: Noah
              destination: 4
            - ref:
                with_ids: next([next([]){%3}]){%7}
                with_hints: null
              hints: null
              related_success_nodes: [7, 3]
              related_answers: []
              value:
                short: "'Jonathan'"
                long: "'Jonathan'"
                json_provided: true
                json: Jonathan
              destination: 8
          origin: [sub, 0, 0]
        "2":
          kind: Branch
          success_value: null
          summary_message: null
          leaf_node: false
          label: PickBoyName
          properties:
            - - with_ids: gen
                with_hints: null
              - kind: query
                name: PickBoyName
                args:
                  names: [Adeline, Noah, Julia, Jonathan]
                  picked_already: []
                answers:
                  - id: 1
                    hint: null
                    value:
                      short: "'Noah'"
                      long: "'Noah'"
                      json_provided: true
                      json: Noah
          actions:
            - ref:
                with_ids: gen{@1}
                with_hints: null
              hints: null
              related_success_nodes: []
              related_answers: [1]
              value:
                short: "'Noah'"
                long: "'Noah'"
                json_provided: true
                json: Noah
              destination: 3
          origin: [sub, 1, 0]
        "3":
          kind: Success
          success_value:
            short: "'Noah'"
            long: "'Noah'"
            json_provided: true
            json: Noah
          summary_message: null
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 2, 0]
        "4":
          kind: Success
          success_value:
            short: "'Noah'"
            long: "'Noah'"
            json_provided: true
            json: Noah
          summary_message: null
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 1, 0]
        "5":
          kind: Failure
          success_value: null
          summary_message: You can do better.
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 0, 0]
        "6":
          kind: Branch
          success_value: null
          summary_message: null
          leaf_node: false
          label: PickBoyName
          properties:
            - - with_ids: gen
                with_hints: null
              - kind: query
                name: PickBoyName
                args:
                  names: [Adeline, Noah, Julia, Jonathan]
                  picked_already: [Noah]
                answers:
                  - id: 2
                    hint: null
                    value:
                      short: "'Jonathan'"
                      long: "'Jonathan'"
                      json_provided: true
                      json: Jonathan
          actions:
            - ref:
                with_ids: gen{@2}
                with_hints: null
              hints: null
              related_success_nodes: []
              related_answers: [2]
              value:
                short: "'Jonathan'"
                long: "'Jonathan'"
                json_provided: true
                json: Jonathan
              destination: 7
          origin: [sub, 1, 1]
        "7":
          kind: Success
          success_value:
            short: "'Jonathan'"
            long: "'Jonathan'"
            json_provided: true
            json: Jonathan
          summary_message: null
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 6, 0]
        "8":
          kind: Success
          success_value:
            short: "'Jonathan'"
            long: "'Jonathan'"
            json_provided: true
            json: Jonathan
          summary_message: null
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 1, 1]
        "9":
          kind: Success
          success_value:
            short: "'Jonathan'"
            long: "'Jonathan'"
            json_provided: true
            json: Jonathan
          summary_message: null
          leaf_node: true
          label: null
          properties: []
          actions: []
          origin: [child, 0, 1]
