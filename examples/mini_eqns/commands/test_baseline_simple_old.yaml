# delphyne-command

command: answer_query
args:
  query: ProveEqualityAtOnce
  args:
    equality: [sin(pi/4), cos(pi/4)]
  prompt_only: false
  model: gpt-4o
  num_answers: 1
  iterative_mode: true
  budget:
    num_requests: 2
outcome:
  status: completed
  diagnostics:
    - - error
      - |
        Internal error: BadRequestError('Error code: 400 - {\'error\': {\'message\': "Invalid schema for response_format \'Proof\': In context=(), array schema missing items.", \'type\': \'invalid_request_error\', \'param\': \'response_format\', \'code\': None}}')

        Traceback (most recent call last):
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/server/execute_command.py", line 41, in execute_command
            command(task, exe, args)
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/commands/answer_query.py", line 133, in answer_query
            with_cache_spec(
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/commands/run_strategy.py", line 210, in with_cache_spec
            return f(cache_spec)
                   ^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/commands/answer_query.py", line 112, in answer_query_with_cache
            for msg in stream:
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/streams.py", line 526, in stream_take
            for msg in stream:
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/streams.py", line 495, in stream_with_budget
            for msg in stream:
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/queries.py", line 1373, in few_shot
            resp = yield from _send_request(model, req, env)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/queries.py", line 1136, in _send_request
            res = yield from spend_on(
                  ^^^^^^^^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/streams.py", line 407, in spend_on
            value, spent = f()
                           ^^^
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/queries.py", line 1138, in <lambda>
            resp := model.send_request(req, get_request_cache(env)),
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/models.py", line 464, in send_request
            return self._send_final_request(full_req)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/delphyne/src/delphyne/stdlib/openai_api.py", line 252, in _send_final_request
            response: ochat.ChatCompletion = client.chat.completions.create(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/lib/python3.12/site-packages/openai/_utils/_utils.py", line 287, in wrapper
            return func(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/lib/python3.12/site-packages/openai/resources/chat/completions/completions.py", line 925, in create
            return self._post(
                   ^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/lib/python3.12/site-packages/openai/_base_client.py", line 1249, in post
            return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/home/guille/anaconda3/envs/guille/lib/python3.12/site-packages/openai/_base_client.py", line 1037, in request
            raise self._make_status_error_from_response(err.response) from None
        openai.BadRequestError: Error code: 400 - {'error': {'message': "Invalid schema for response_format 'Proof': In context=(), array schema missing items.", 'type': 'invalid_request_error', 'param': 'response_format', 'code': None}}
  result: null
